
//listing of all techniques and passes with embedded asm listings 

technique Lighting
{
    pass Pass1
    {
        vertexshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.23.949.2378
            //
            // Parameters:
            //
            //   struct
            //   {
            //       float4 color;
            //       float start;
            //       float end;
            //       float altitude;
            //       float thinning;
            //       bool enabled;
            //
            //   } fog;
            //   
            //   float4x4 projectionMatrix;
            //   float4x4 viewMatrix;
            //   float4x4 worldMatrix;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   worldMatrix      c0       4
            //   viewMatrix       c4       4
            //   projectionMatrix c8       4
            //   fog              c12      4
            //
            
                preshader
                mul r0, c4.x, c0
                mul r1, c4.y, c1
                add r2, r0, r1
                mul r0, c4.z, c2
                add r1, r2, r0
                mul r0, c4.w, c3
                add r2, r1, r0
                mul r0, c8.x, r2
                mul r1, c5.x, c0
                mul r3, c5.y, c1
                add r4, r1, r3
                mul r1, c5.z, c2
                add r3, r4, r1
                mul r1, c5.w, c3
                add r4, r3, r1
                mul r1, c8.y, r4
                add r3, r0, r1
                mul r0, c6.x, c0
                mul r1, c6.y, c1
                add r5, r0, r1
                mul r0, c6.z, c2
                add r1, r5, r0
                mul r0, c6.w, c3
                add r5, r1, r0
                mul r0, c8.z, r5
                add r1, r3, r0
                mul r0, c7.x, c0
                mul r3, c7.y, c1
                add r6, r0, r3
                mul r0, c7.z, c2
                add r3, r6, r0
                mul r0, c7.w, c3
                add r6, r3, r0
                mul r0, c8.w, r6
                add c6, r1, r0
                mul r0, c9.x, r2
                mul r1, c9.y, r4
                add r3, r0, r1
                mul r0, c9.z, r5
                add r1, r3, r0
                mul r0, c9.w, r6
                add c7, r1, r0
                mul r0, c10.x, r2
                mul r1, c11.x, r2
                mul r2, c10.y, r4
                mul r3, c11.y, r4
                add r4, r1, r3
                add r1, r0, r2
                mul r0, c10.z, r5
                mul r2, c11.z, r5
                add r3, r4, r2
                add r2, r1, r0
                mul r0, c10.w, r6
                mul r1, c11.w, r6
                add c9, r3, r1
                add c8, r2, r0
                neg r0.x, c13.x
                add r1.x, r0.x, c14.x
                rcp c10.x, r1.x
                rcp c11.x, c15.x
            
            // approximately 60 instructions used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.23.949.2378
            //
            // Parameters:
            //
            //   float3 cameraPos;
            //   
            //   struct
            //   {
            //       float4 color;
            //       float start;
            //       float end;
            //       float altitude;
            //       float thinning;
            //       bool enabled;
            //
            //   } fog;
            //   
            //   float4x4 worldInverseTransposeMatrix;
            //   float4x4 worldMatrix;
            //
            //
            // Registers:
            //
            //   Name                        Reg   Size
            //   --------------------------- ----- ----
            //   fog                         c0       6
            //   worldMatrix                 c12      3
            //   worldInverseTransposeMatrix c15      3
            //   cameraPos                   c18      1
            //
            
                vs_3_0
                def c19, 1, 0, 0, 0
                dcl_position v0
                dcl_texcoord v1
                dcl_normal v2
                dcl_tangent v3
                dcl_position o0
                dcl_texcoord o1
                dcl_texcoord1 o2.xy
                dcl_texcoord2 o3.xyz
                dcl_texcoord3 o4.xyz
                dcl_texcoord4 o5.xyz
                dcl_texcoord5 o6.xyz
                mad r0, v0.xyzx, c19.xxxy, c19.yyyx
                dp4 o0.x, r0, c6
                dp4 o0.y, r0, c7
                dp4 o0.z, r0, c8
                dp4 o0.w, r0, c9
                dp4 r1.x, r0, c12
                dp4 r1.z, r0, c14
                dp4 r1.y, r0, c13
                add r0.xyz, -r1, c18
                dp3 r0.w, r0, r0
                rsq r0.w, r0.w
                mul o3.xyz, r0, r0.w
                dp3 r0.x, v2, c15
                dp3 r0.y, v2, c16
                dp3 r0.z, v2, c17
                nrm r2.xyz, r0
                dp3 r0.x, v3, c15
                dp3 r0.y, v3, c16
                dp3 r0.z, v3, c17
                mul r3.xyz, r2.zxyw, r0.yzxw
                mad r3.xyz, r2.yzxw, r0.zxyw, -r3
                mov o4.xyz, r2
                mov o5.xyz, r0
                mul o6.xyz, r3, v3.w
                add r0.xyz, r1, -c18
                mov o1.xyz, r1
                mov r1.x, c19.x
                mad r0.w, r1.y, c11.x, r1.x
                max r0.w, r0.w, c19.x
                min r0.w, r0.w, c4.x
                rcp r0.w, r0.w
                dp3 r0.x, r0, r0
                rsq r0.x, r0.x
                rcp r0.x, r0.x
                add r0.x, r0.x, -c1.x
                mul r0.x, r0.x, c10.x
                mul_sat r0.x, r0.w, r0.x
                mul o1.w, r0.x, c5.x
                mov o2.xy, v1
            
            // approximately 41 instruction slots used
            };

        pixelshader = 
            asm {
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.23.949.2378
            //
            // Parameters:
            //
            //   struct
            //   {
            //       float4 diffuse;
            //       float4 emissive;
            //       float4 specular;
            //       float shininess;
            //       float alpha;
            //       float reflection;
            //
            //   } material;
            //
            //
            // Registers:
            //
            //   Name         Reg   Size
            //   ------------ ----- ----
            //   material     c0       5
            //
            
                preshader
                mov c46.x, c4.x
            
            // approximately 1 instruction used
            //
            // Generated by Microsoft (R) HLSL Shader Compiler 9.23.949.2378
            //
            // Parameters:
            //
            //   float3 cameraPos;
            //   sampler2D colorMap;
            //   
            //   struct
            //   {
            //       float3 dir;
            //       float4 diffuse;
            //       float4 specular;
            //       bool enabled;
            //
            //   } dirLight[3];
            //   
            //   samplerCUBE environmentMap;
            //   
            //   struct
            //   {
            //       float4 color;
            //       float start;
            //       float end;
            //       float altitude;
            //       float thinning;
            //       bool enabled;
            //
            //   } fog;
            //   
            //   float4 globalAmbient;
            //   
            //   struct
            //   {
            //       float4 diffuse;
            //       float4 emissive;
            //       float4 specular;
            //       float shininess;
            //       float alpha;
            //       float reflection;
            //
            //   } material;
            //   
            //   sampler2D normalMap;
            //   
            //   struct
            //   {
            //       float3 pos;
            //       float4 diffuse;
            //       float4 specular;
            //       float radius;
            //       bool enabled;
            //
            //   } pointLight[4];
            //   
            //   bool useDynamicLights;
            //
            //
            // Registers:
            //
            //   Name             Reg   Size
            //   ---------------- ----- ----
            //   useDynamicLights b0       1
            //   pointLight       c0      20
            //   dirLight         c20     12
            //   fog              c32      6
            //   material         c38      6
            //   cameraPos        c44      1
            //   globalAmbient    c45      1
            //   colorMap         s0       1
            //   normalMap        s1       1
            //   environmentMap   s2       1
            //
            
                ps_3_0
                def c47, 2, -1, 3, 0
                def c48, 0, -1, -2, 1
                defi i0, 3, 0, 0, 0
                defi i1, 4, 0, 0, 0
                dcl_texcoord v0
                dcl_texcoord1 v1.xy
                dcl_texcoord2 v2.xyz
                dcl_texcoord3 v3.xyz
                dcl_texcoord4 v4.xyz
                dcl_texcoord5 v5.xyz
                dcl_2d s0
                dcl_2d s1
                dcl_cube s2
                nrm r0.xyz, v4
                nrm r1.xyz, v5
                nrm r2.xyz, v3
                texld r3, v1, s1
                mad r3.xyz, r3, c47.x, c47.y
                nrm r4.xyz, r3
                mov r3.xyz, c45
                mov r5.xyz, c47.w
                mov r6.x, c47.w
                rep i0
                  add r6, r6.x, c48.wxyz
                  mov r0.w, c47.w
                  cmp r7.xyz, -r6_abs.y, c20, r0.w
                  cmp r7.xyz, -r6_abs.z, c24, r7
                  cmp r7.xyz, -r6_abs.w, c28, r7
                  add r8.xyz, -r7, v2
                  nrm r9.xyz, r8
                  dp3 r8.x, r9, r0
                  dp3 r8.y, r9, r1
                  dp3 r8.z, r9, r2
                  dp3 r9.x, -r7, r0
                  dp3 r9.y, -r7, r1
                  dp3 r9.z, -r7, r2
                  nrm r7.xyz, r9
                  dp3_sat r1.w, r4, r7
                  dp3_sat r2.w, r4, r8
                  pow r3.w, r2.w, c41.x
                  cmp r2.w, -r1.w, c47.w, r3.w
                  cmp r3.w, -r6_abs.y, c23.x, r0.w
                  cmp r3.w, -r6_abs.z, c27.x, r3.w
                  cmp r3.w, -r6_abs.w, c31.x, r3.w
                  cmp r7.xyz, -r6_abs.y, c21, r0.w
                  cmp r7.xyz, -r6_abs.z, c25, r7
                  cmp r7.xyz, -r6_abs.w, c29, r7
                  mul r7.xyz, r3.w, r7
                  mad r3.xyz, r7, r1.w, r3
                  cmp r7.xyz, -r6_abs.y, c22, r0.w
                  cmp r7.xyz, -r6_abs.z, c26, r7
                  cmp r6.yzw, -r6_abs.w, c30.xxyz, r7.xxyz
                  mul r6.yzw, r3.w, r6
                  mad r5.xyz, r6.yzww, r2.w, r5
                endrep
                if b0
                  add r6.xyz, c44, -v0
                  dp3 r7.x, r6, r0
                  dp3 r7.y, r6, r1
                  dp3 r7.z, r6, r2
                  dp3 r0.w, r7, r7
                  rsq r0.w, r0.w
                  mov r1.w, c47.w
                  rep i1
                    add r6, r1.w, -c47_abs.wyxz
                    mov r2.w, c47.w
                    cmp r8.xyz, -r6_abs.x, c0, r2.w
                    cmp r8.xyz, -r6_abs.y, c5, r8
                    cmp r8.xyz, -r6_abs.z, c10, r8
                    cmp r8.xyz, -r6_abs.w, c15, r8
                    add r8.xyz, r8, -v0
                    cmp r3.w, -r6_abs.x, c3.x, r2.w
                    cmp r3.w, -r6_abs.y, c8.x, r3.w
                    cmp r3.w, -r6_abs.z, c13.x, r3.w
                    cmp r3.w, -r6_abs.w, c18.x, r3.w
                    rcp r3.w, r3.w
                    mul r8.xyz, r8, r3.w
                    dp3 r9.x, r8, r0
                    dp3 r9.y, r8, r1
                    dp3 r9.z, r8, r2
                    dp3 r3.w, r9, r9
                    add_sat r4.w, -r3.w, -c47.y
                    rsq r3.w, r3.w
                    mul r8.xyz, r9, r3.w
                    dp3_sat r3.w, r4, r8
                    mad r8.xyz, r7, r0.w, r8
                    nrm r9.xyz, r8
                    dp3_sat r5.w, r4, r9
                    pow r7.w, r5.w, c41.x
                    cmp r5.w, -r3.w, c47.w, r7.w
                    cmp r7.w, -r6_abs.x, c4.x, r2.w
                    cmp r7.w, -r6_abs.y, c9.x, r7.w
                    cmp r7.w, -r6_abs.z, c14.x, r7.w
                    cmp r7.w, -r6_abs.w, c19.x, r7.w
                    cmp r8.xyz, -r6_abs.x, c1, r2.w
                    cmp r8.xyz, -r6_abs.y, c6, r8
                    cmp r8.xyz, -r6_abs.z, c11, r8
                    cmp r8.xyz, -r6_abs.w, c16, r8
                    mul r8.xyz, r7.w, r8
                    mul r8.xyz, r3.w, r8
                    mad r3.xyz, r8, r4.w, r3
                    cmp r8.xyz, -r6_abs.x, c2, r2.w
                    cmp r8.xyz, -r6_abs.y, c7, r8
                    cmp r6.xyz, -r6_abs.z, c12, r8
                    cmp r6.xyz, -r6_abs.w, c17, r6
                    mul r6.xyz, r7.w, r6
                    mul r6.xyz, r5.w, r6
                    mad r5.xyz, r6, r4.w, r5
                    add r1.w, r1.w, -c47.y
                  endrep
                endif
                mov r0.xyz, c38
                mad r0.xyz, r3, r0, c39
                mul r1.xyz, r5, c40
                texld r2, v1, s0
                mad r0.xyz, r2, r0, r1
                nrm r1.xyz, v2
                dp3 r0.w, r1, r4
                add r0.w, r0.w, r0.w
                mad r1.xyz, r4, -r0.w, r1
                texld r1, r1, s2
                mad r1.xyz, r1, c43.x, r0
                cmp r0.xyz, -c43.x, r0, r1
                lrp r1.xyz, v0.w, c32, r0
                cmp oC0.xyz, -c37.x, r0, r1
                mov oC0.w, c46.x
            
            // approximately 141 instruction slots used (3 texture, 138 arithmetic)
            };
    }
}

